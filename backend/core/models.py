from typing import Optional, List, Dict, Any
from pydantic import BaseModel, Field


class StoryOptionLLM(BaseModel):
    """
    Represents an option in the story generated by the LLM.
    """
    text: str = Field(
        description="The text of the option shown to the user"
    )
    nextNode: Dict[str, Any] = Field(
        description="The next node content and its options"
    )


class StoryNodeLLM(BaseModel):
    """
    Represents a node in the story generated by the LLM.
    """
    content: str = Field(
        description="The main content of the story node"
    )
    isEnding: bool = Field(
        description="Whether this node is an ending node"
    )
    isWinningEnding: bool = Field(
        description="Whether this ending node is a winning ending node"
    )
    options: Optional[List[StoryOptionLLM]] = Field(
        default=None,
        description="List of options available at this node"
    )


class StoryLLMResponse(BaseModel):
    """
    Represents the complete story structure generated by the LLM.
    """
    title: str = Field(description="The title of the story")
    rootNode: StoryNodeLLM = Field(
        description="The root node of the story"
    )